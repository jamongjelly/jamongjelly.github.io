{"version":3,"sources":["webpack://gatsby-starter-blog/./src/components/blog/PostBottomNav/index.tsx","webpack://gatsby-starter-blog/./src/components/blog/PostDetail/PostFieldBox/index.tsx","webpack://gatsby-starter-blog/./src/components/blog/PostDetail/index.tsx","webpack://gatsby-starter-blog/./src/templates/BlogPost.tsx"],"names":["prev","next","className","style","display","flexWrap","justifyContent","listStyle","padding","Link","to","fields","slug","rel","frontmatter","title","label","data","post","author","name","date","dangerouslySetInnerHTML","__html","html","siteMetadata","location","site","markdownRemark","previous","Layout"],"mappings":"4MAwCA,MA/BA,YAAoD,IAA3BA,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,KAC7B,OACE,uBAAKC,UAAU,iBACb,sBACEC,MAAO,CACLC,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,0BACGR,GACC,gBAAC,EAAAS,KAAD,CAAMC,GAAIV,EAAKW,OAAOC,KAAMC,IAAI,QAAhC,KACKb,EAAKc,YAAYC,QAI1B,0BACGd,GACC,gBAAC,EAAAQ,KAAD,CAAMC,GAAIT,EAAKU,OAAOC,KAAMC,IAAI,QAC7BZ,EAAKa,YAAYC,MADpB,UCbZ,MATA,YAA2D,IAAnCC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,KAC7B,OACE,uBAAKf,UAAU,kBACb,0BAAQA,UAAU,yBAAyBc,GAC3C,wBAAMd,UAAU,wBAAwBe,KCyB9C,MAxBA,YAAoE,IAA9CC,EAA6C,EAA7CA,KAAMC,EAAuC,EAAvCA,OAAQnB,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,KACxC,OACE,2BAASC,UAAU,QACjB,0BAAQA,UAAU,gBAChB,sBAAIA,UAAU,eAAegB,EAAKJ,YAAYC,OAC9C,uBAAKb,UAAU,uBACb,gBAAC,EAAD,CAAcc,MAAM,SAASC,KAAME,EAAOC,OAC1C,gBAAC,EAAD,CAAcJ,MAAM,OAAOC,KAAMC,EAAKJ,YAAYO,SAGtD,2BACEnB,UAAU,WACVoB,wBAAyB,CAAEC,OAAQL,EAAKM,QAI1C,0BAAQtB,UAAU,gBAChB,2BACA,gBAAC,EAAD,CAAeF,KAAMA,EAAMC,KAAMA,OCAzC,MApBA,YAAsE,IAA1CgB,EAAyC,EAAzCA,KACpBQ,GAD6D,EAAnCC,SACXT,EAAKU,KAAKF,cACzBP,EAAOD,EAAKW,eACVC,EAAmBZ,EAAnBY,SAAU5B,EAASgB,EAAThB,KAElB,OACE,gBAAC6B,EAAA,EAAD,KAIE,gBAAC,EAAD,CACEZ,KAAMA,EACNC,OAAQM,EAAaN,OACrBnB,KAAM6B,EACN5B,KAAMA","file":"component---src-templates-blog-post-tsx-5d9cb009ad203ab327bf.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport { PostNavMetaData } from \"@src/types/blog\";\r\n\r\ninterface indexProps {\r\n  prev: PostNavMetaData;\r\n  next: PostNavMetaData;\r\n}\r\n\r\nfunction PostBottomNav({ prev, next }: indexProps) {\r\n  return (\r\n    <nav className=\"blog-post-nav\">\r\n      <ul\r\n        style={{\r\n          display: `flex`,\r\n          flexWrap: `wrap`,\r\n          justifyContent: `space-between`,\r\n          listStyle: `none`,\r\n          padding: 0,\r\n        }}\r\n      >\r\n        <li>\r\n          {prev && (\r\n            <Link to={prev.fields.slug} rel=\"prev\">\r\n              ← {prev.frontmatter.title}\r\n            </Link>\r\n          )}\r\n        </li>\r\n        <li>\r\n          {next && (\r\n            <Link to={next.fields.slug} rel=\"next\">\r\n              {next.frontmatter.title} →\r\n            </Link>\r\n          )}\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default PostBottomNav;\r\n","import React from \"react\";\r\nimport \"./PostFieldBox.scss\";\r\n\r\ninterface PostFieldBoxProps {\r\n  label: string;\r\n  data: string;\r\n}\r\n\r\nfunction PostFieldBox({ label, data }: PostFieldBoxProps) {\r\n  return (\r\n    <div className=\"post-field-box\">\r\n      <strong className=\"post-field-box__label\">{label}</strong>\r\n      <span className=\"post-field-box__data\">{data}</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostFieldBox;\r\n","import React from \"react\";\r\nimport \"./PostDetail.scss\";\r\nimport { Author, Post, PostNavMetaData } from \"@src/types/blog\";\r\nimport PostBottomNav from \"@src/components/blog/PostBottomNav\";\r\nimport PostFieldBox from \"./PostFieldBox\";\r\n\r\ninterface PostDetailProps {\r\n  post: Post;\r\n  author: Author;\r\n  prev: PostNavMetaData;\r\n  next: PostNavMetaData;\r\n}\r\n\r\nfunction PostDetail({ post, author, prev, next }: PostDetailProps) {\r\n  return (\r\n    <article className=\"post\">\r\n      <header className=\"post__header\">\r\n        <h1 className=\"post__title\">{post.frontmatter.title}</h1>\r\n        <div className=\"post__meta-info-box\">\r\n          <PostFieldBox label=\"Author\" data={author.name} />\r\n          <PostFieldBox label=\"Date\" data={post.frontmatter.date} />\r\n        </div>\r\n      </header>\r\n      <section\r\n        className=\"post__md\"\r\n        dangerouslySetInnerHTML={{ __html: post.html }}\r\n        // itemProp=\"articleBody\"\r\n      />\r\n\r\n      <footer className=\"post__footer\">\r\n        <hr />\r\n        <PostBottomNav prev={prev} next={next} />\r\n      </footer>\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default PostDetail;\r\n","import * as React from \"react\";\r\nimport { graphql } from \"gatsby\";\r\nimport PostBottomNav from \"@src/components/blog/PostBottomNav\";\r\nimport Layout from \"@src/components/Layout\";\r\nimport PostDetail from \"@src/components/blog/PostDetail\";\r\n\r\ninterface BlogPostTemplateProps {\r\n  data: any;\r\n  location: any;\r\n}\r\n\r\nfunction BlogPostTemplate({ data, location }: BlogPostTemplateProps) {\r\n  const siteMetadata = data.site.siteMetadata;\r\n  const post = data.markdownRemark;\r\n  const { previous, next } = data;\r\n\r\n  return (\r\n    <Layout\r\n    // title={post.frontmatter.title}\r\n    // description={post.frontmatter.description || post.excerpt}\r\n    >\r\n      <PostDetail\r\n        post={post}\r\n        author={siteMetadata.author}\r\n        prev={previous}\r\n        next={next}\r\n      />\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default BlogPostTemplate;\r\n\r\nexport const pageQuery = graphql`\r\n  query BlogPostBySlug(\r\n    $id: String!\r\n    $previousPostId: String\r\n    $nextPostId: String\r\n  ) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        author {\r\n          name\r\n        }\r\n      }\r\n    }\r\n    markdownRemark(id: { eq: $id }) {\r\n      id\r\n      excerpt(pruneLength: 160)\r\n      html\r\n      frontmatter {\r\n        title\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        description\r\n      }\r\n    }\r\n    previous: markdownRemark(id: { eq: $previousPostId }) {\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        title\r\n      }\r\n    }\r\n    next: markdownRemark(id: { eq: $nextPostId }) {\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        title\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}